{"ast":null,"code":"var _jsxFileName = \"/Users/pogus-mac/Library/CloudStorage/GoogleDrive-gusjangkid@gmail.com/My Drive/Project-VScode/Ai hobby/Project-taco-boy/web-app/Make-it-clean/src/Routes/Login.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport Login from './image/logo/Login.png';\nimport './css/App.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Home() {\n  _s();\n  const navigate = useNavigate();\n  const [username, setUsername] = useState('');\n  const [password, setPassword] = useState('');\n  const handleLogin = () => {\n    // Perform login logic here\n    // For simplicity, let's check if the username is '001' or '002'\n    if (username === 'Naphat_001') {\n      // Navigate to the home page for user '001'\n      navigate('/Home');\n    } else if (username === 'Teacher_001') {\n      // Navigate to the admin home page for user '002'\n      navigate('/Admin_Home');\n    } else {\n      // You can handle other cases, show an error message, etc.\n      console.log('Invalid username');\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"login-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"img\", {\n      src: Login,\n      alt: \"UGBN\",\n      className: \"background-image\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"login-form\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        id: \"username\",\n        className: \"transparent-placeholder\",\n        placeholder: \"Username:\",\n        value: username,\n        onChange: e => setUsername(e.target.value),\n        style: {\n          fontSize: '20px'\n        } // Increase text size as needed\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"password\",\n        id: \"password\",\n        className: \"transparent-placeholder\",\n        placeholder: \"Password\",\n        value: password,\n        onChange: e => setPassword(e.target.value),\n        style: {\n          fontSize: '20px'\n        } // Increase text size as needed\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"button-login\",\n        onClick: handleLogin\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 27,\n    columnNumber: 5\n  }, this);\n}\n_s(Home, \"EgYjDAoSBrLcIIdUzvjslMz3nCA=\", false, function () {\n  return [useNavigate];\n});\n_c = Home;\nexport default Home;\nvar _c;\n$RefreshReg$(_c, \"Home\");","map":{"version":3,"names":["React","useState","useNavigate","Login","jsxDEV","_jsxDEV","Home","_s","navigate","username","setUsername","password","setPassword","handleLogin","console","log","className","children","src","alt","fileName","_jsxFileName","lineNumber","columnNumber","type","id","placeholder","value","onChange","e","target","style","fontSize","onClick","_c","$RefreshReg$"],"sources":["/Users/pogus-mac/Library/CloudStorage/GoogleDrive-gusjangkid@gmail.com/My Drive/Project-VScode/Ai hobby/Project-taco-boy/web-app/Make-it-clean/src/Routes/Login.js"],"sourcesContent":["import React, { useState } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport Login from './image/logo/Login.png';\nimport './css/App.css';\n\nfunction Home() {\n  const navigate = useNavigate();\n  const [username, setUsername] = useState('');\n  const [password, setPassword] = useState('');\n\n  const handleLogin = () => {\n    // Perform login logic here\n    // For simplicity, let's check if the username is '001' or '002'\n    if (username === 'Naphat_001') {\n      // Navigate to the home page for user '001'\n      navigate('/Home');\n    } else if (username === 'Teacher_001') {\n      // Navigate to the admin home page for user '002'\n      navigate('/Admin_Home');\n    } else {\n      // You can handle other cases, show an error message, etc.\n      console.log('Invalid username');\n    }\n  };\n\n  return (\n    <div className=\"login-container\">\n      <img src={Login} alt=\"UGBN\" className=\"background-image\" />\n\n      <div className=\"login-form\">\n        <input\n          type=\"text\"\n          id=\"username\"\n          className=\"transparent-placeholder\"\n          placeholder=\"Username:\"\n          value={username}\n          onChange={(e) => setUsername(e.target.value)}\n          style={{ fontSize: '20px' }} // Increase text size as needed\n        />\n\n        <input\n          type=\"password\"\n          id=\"password\"\n          className=\"transparent-placeholder\"\n          placeholder=\"Password\"\n          value={password}\n          onChange={(e) => setPassword(e.target.value)}\n          style={{ fontSize: '20px' }} // Increase text size as needed\n        />\n\n        <button className= 'button-login' onClick={handleLogin}></button>\n      </div>\n    </div>\n  );\n}\n\nexport default Home;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,SAASC,WAAW,QAAQ,kBAAkB;AAC9C,OAAOC,KAAK,MAAM,wBAAwB;AAC1C,OAAO,eAAe;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEvB,SAASC,IAAIA,CAAA,EAAG;EAAAC,EAAA;EACd,MAAMC,QAAQ,GAAGN,WAAW,CAAC,CAAC;EAC9B,MAAM,CAACO,QAAQ,EAAEC,WAAW,CAAC,GAAGT,QAAQ,CAAC,EAAE,CAAC;EAC5C,MAAM,CAACU,QAAQ,EAAEC,WAAW,CAAC,GAAGX,QAAQ,CAAC,EAAE,CAAC;EAE5C,MAAMY,WAAW,GAAGA,CAAA,KAAM;IACxB;IACA;IACA,IAAIJ,QAAQ,KAAK,YAAY,EAAE;MAC7B;MACAD,QAAQ,CAAC,OAAO,CAAC;IACnB,CAAC,MAAM,IAAIC,QAAQ,KAAK,aAAa,EAAE;MACrC;MACAD,QAAQ,CAAC,aAAa,CAAC;IACzB,CAAC,MAAM;MACL;MACAM,OAAO,CAACC,GAAG,CAAC,kBAAkB,CAAC;IACjC;EACF,CAAC;EAED,oBACEV,OAAA;IAAKW,SAAS,EAAC,iBAAiB;IAAAC,QAAA,gBAC9BZ,OAAA;MAAKa,GAAG,EAAEf,KAAM;MAACgB,GAAG,EAAC,MAAM;MAACH,SAAS,EAAC;IAAkB;MAAAI,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eAE3DlB,OAAA;MAAKW,SAAS,EAAC,YAAY;MAAAC,QAAA,gBACzBZ,OAAA;QACEmB,IAAI,EAAC,MAAM;QACXC,EAAE,EAAC,UAAU;QACbT,SAAS,EAAC,yBAAyB;QACnCU,WAAW,EAAC,WAAW;QACvBC,KAAK,EAAElB,QAAS;QAChBmB,QAAQ,EAAGC,CAAC,IAAKnB,WAAW,CAACmB,CAAC,CAACC,MAAM,CAACH,KAAK,CAAE;QAC7CI,KAAK,EAAE;UAAEC,QAAQ,EAAE;QAAO,CAAE,CAAC;MAAA;QAAAZ,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAC9B,CAAC,eAEFlB,OAAA;QACEmB,IAAI,EAAC,UAAU;QACfC,EAAE,EAAC,UAAU;QACbT,SAAS,EAAC,yBAAyB;QACnCU,WAAW,EAAC,UAAU;QACtBC,KAAK,EAAEhB,QAAS;QAChBiB,QAAQ,EAAGC,CAAC,IAAKjB,WAAW,CAACiB,CAAC,CAACC,MAAM,CAACH,KAAK,CAAE;QAC7CI,KAAK,EAAE;UAAEC,QAAQ,EAAE;QAAO,CAAE,CAAC;MAAA;QAAAZ,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAC9B,CAAC,eAEFlB,OAAA;QAAQW,SAAS,EAAE,cAAc;QAACiB,OAAO,EAAEpB;MAAY;QAAAO,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAS,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC9D,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEV;AAAChB,EAAA,CAjDQD,IAAI;EAAA,QACMJ,WAAW;AAAA;AAAAgC,EAAA,GADrB5B,IAAI;AAmDb,eAAeA,IAAI;AAAC,IAAA4B,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}