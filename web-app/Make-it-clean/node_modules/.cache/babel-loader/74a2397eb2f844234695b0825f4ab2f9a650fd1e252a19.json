{"ast":null,"code":"import React,{useState}from'react';import{useNavigate}from'react-router-dom';import Login from'./image/logo/Login.png';import'./css/App.css';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";function Home(){const navigate=useNavigate();const[username,setUsername]=useState('');const[password,setPassword]=useState('');const handleLogin=()=>{// Perform login logic here\n// For simplicity, let's check if the username is '001' or '002'\nif(username==='001'){// Navigate to the home page for user '001'\nnavigate('/Home');}else if(username==='002'){// Navigate to the admin home page for user '002'\nnavigate('/Admin_Home');}else{// You can handle other cases, show an error message, etc.\nconsole.log('Invalid username');}};return/*#__PURE__*/_jsxs(\"div\",{className:\"login-container\",children:[/*#__PURE__*/_jsx(\"img\",{src:Login,alt:\"UGBN\",className:\"background-image\"}),/*#__PURE__*/_jsxs(\"div\",{className:\"login-form\",children:[/*#__PURE__*/_jsx(\"input\",{type:\"text\",id:\"username\",className:\"transparent-placeholder\",placeholder:\"Username:\",value:username,onChange:e=>setUsername(e.target.value),style:{fontSize:'20px'}// Increase text size as needed\n}),/*#__PURE__*/_jsx(\"input\",{type:\"password\",id:\"password\",className:\"transparent-placeholder\",placeholder:\"Password\",value:password,onChange:e=>setPassword(e.target.value),style:{fontSize:'20px'}// Increase text size as needed\n}),/*#__PURE__*/_jsx(\"button\",{className:\"button-login\",onClick:handleLogin})]})]});}export default Home;","map":{"version":3,"names":["React","useState","useNavigate","Login","jsx","_jsx","jsxs","_jsxs","Home","navigate","username","setUsername","password","setPassword","handleLogin","console","log","className","children","src","alt","type","id","placeholder","value","onChange","e","target","style","fontSize","onClick"],"sources":["/Users/pogus-mac/Library/CloudStorage/GoogleDrive-gusjangkid@gmail.com/My Drive/Project-VScode/Ai hobby/Project-taco-boy/Uphasia-master/Uphasia/src/Routes/Login.js"],"sourcesContent":["import React, { useState } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport Login from './image/logo/Login.png';\nimport './css/App.css';\n\nfunction Home() {\n  const navigate = useNavigate();\n  const [username, setUsername] = useState('');\n  const [password, setPassword] = useState('');\n\n  const handleLogin = () => {\n    // Perform login logic here\n    // For simplicity, let's check if the username is '001' or '002'\n    if (username === '001') {\n      // Navigate to the home page for user '001'\n      navigate('/Home');\n    } else if (username === '002') {\n      // Navigate to the admin home page for user '002'\n      navigate('/Admin_Home');\n    } else {\n      // You can handle other cases, show an error message, etc.\n      console.log('Invalid username');\n    }\n  };\n\n  return (\n    <div className=\"login-container\">\n      <img src={Login} alt=\"UGBN\" className=\"background-image\" />\n\n      <div className=\"login-form\">\n        <input\n          type=\"text\"\n          id=\"username\"\n          className=\"transparent-placeholder\"\n          placeholder=\"Username:\"\n          value={username}\n          onChange={(e) => setUsername(e.target.value)}\n          style={{ fontSize: '20px' }} // Increase text size as needed\n        />\n\n        <input\n          type=\"password\"\n          id=\"password\"\n          className=\"transparent-placeholder\"\n          placeholder=\"Password\"\n          value={password}\n          onChange={(e) => setPassword(e.target.value)}\n          style={{ fontSize: '20px' }} // Increase text size as needed\n        />\n\n        <button className= 'button-login' onClick={handleLogin}></button>\n      </div>\n    </div>\n  );\n}\n\nexport default Home;\n"],"mappings":"AAAA,MAAO,CAAAA,KAAK,EAAIC,QAAQ,KAAQ,OAAO,CACvC,OAASC,WAAW,KAAQ,kBAAkB,CAC9C,MAAO,CAAAC,KAAK,KAAM,wBAAwB,CAC1C,MAAO,eAAe,CAAC,OAAAC,GAAA,IAAAC,IAAA,gCAAAC,IAAA,IAAAC,KAAA,yBAEvB,QAAS,CAAAC,IAAIA,CAAA,CAAG,CACd,KAAM,CAAAC,QAAQ,CAAGP,WAAW,CAAC,CAAC,CAC9B,KAAM,CAACQ,QAAQ,CAAEC,WAAW,CAAC,CAAGV,QAAQ,CAAC,EAAE,CAAC,CAC5C,KAAM,CAACW,QAAQ,CAAEC,WAAW,CAAC,CAAGZ,QAAQ,CAAC,EAAE,CAAC,CAE5C,KAAM,CAAAa,WAAW,CAAGA,CAAA,GAAM,CACxB;AACA;AACA,GAAIJ,QAAQ,GAAK,KAAK,CAAE,CACtB;AACAD,QAAQ,CAAC,OAAO,CAAC,CACnB,CAAC,IAAM,IAAIC,QAAQ,GAAK,KAAK,CAAE,CAC7B;AACAD,QAAQ,CAAC,aAAa,CAAC,CACzB,CAAC,IAAM,CACL;AACAM,OAAO,CAACC,GAAG,CAAC,kBAAkB,CAAC,CACjC,CACF,CAAC,CAED,mBACET,KAAA,QAAKU,SAAS,CAAC,iBAAiB,CAAAC,QAAA,eAC9Bb,IAAA,QAAKc,GAAG,CAAEhB,KAAM,CAACiB,GAAG,CAAC,MAAM,CAACH,SAAS,CAAC,kBAAkB,CAAE,CAAC,cAE3DV,KAAA,QAAKU,SAAS,CAAC,YAAY,CAAAC,QAAA,eACzBb,IAAA,UACEgB,IAAI,CAAC,MAAM,CACXC,EAAE,CAAC,UAAU,CACbL,SAAS,CAAC,yBAAyB,CACnCM,WAAW,CAAC,WAAW,CACvBC,KAAK,CAAEd,QAAS,CAChBe,QAAQ,CAAGC,CAAC,EAAKf,WAAW,CAACe,CAAC,CAACC,MAAM,CAACH,KAAK,CAAE,CAC7CI,KAAK,CAAE,CAAEC,QAAQ,CAAE,MAAO,CAAG;AAAA,CAC9B,CAAC,cAEFxB,IAAA,UACEgB,IAAI,CAAC,UAAU,CACfC,EAAE,CAAC,UAAU,CACbL,SAAS,CAAC,yBAAyB,CACnCM,WAAW,CAAC,UAAU,CACtBC,KAAK,CAAEZ,QAAS,CAChBa,QAAQ,CAAGC,CAAC,EAAKb,WAAW,CAACa,CAAC,CAACC,MAAM,CAACH,KAAK,CAAE,CAC7CI,KAAK,CAAE,CAAEC,QAAQ,CAAE,MAAO,CAAG;AAAA,CAC9B,CAAC,cAEFxB,IAAA,WAAQY,SAAS,CAAE,cAAc,CAACa,OAAO,CAAEhB,WAAY,CAAS,CAAC,EAC9D,CAAC,EACH,CAAC,CAEV,CAEA,cAAe,CAAAN,IAAI"},"metadata":{},"sourceType":"module","externalDependencies":[]}